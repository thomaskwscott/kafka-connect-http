package uk.co.threefi.connect.http.sink;

/**
 * {@link RequestInfo} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractRequestInfoAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class RequestInfoAssert extends AbstractRequestInfoAssert<RequestInfoAssert, RequestInfo> {

  /**
   * Creates a new <code>{@link RequestInfoAssert}</code> to make assertions on actual RequestInfo.
   * @param actual the RequestInfo we want to make assertions on.
   */
  public RequestInfoAssert(RequestInfo actual) {
    super(actual, RequestInfoAssert.class);
  }

  /**
   * An entry point for RequestInfoAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myRequestInfo)</code> and get specific assertion with code completion.
   * @param actual the RequestInfo we want to make assertions on.
   * @return a new <code>{@link RequestInfoAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static RequestInfoAssert assertThat(RequestInfo actual) {
    return new RequestInfoAssert(actual);
  }
}
